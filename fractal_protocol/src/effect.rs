#[allow(dead_code)]
#[allow(non_camel_case_types)]
#[derive(Copy, Clone, Debug, Eq, PartialEq, PrimitiveEnum)]
pub enum EffectId {
    ID_CONTROL = 2,
    ID_TUNER = 35,
    ID_IRCAPTURE,
    ID_INPUT1,
    ID_INPUT2,
    ID_INPUT3,
    ID_INPUT4,
    /// USB Input
    ID_INPUT5,
    ID_OUTPUT1,
    ID_OUTPUT2,
    ID_OUTPUT3,
    ID_OUTPUT4,
    ID_COMP1,
    ID_COMP2,
    ID_COMP3,
    ID_COMP4,
    ID_GRAPHEQ1,
    ID_GRAPHEQ2,
    ID_GRAPHEQ3,
    ID_GRAPHEQ4,
    ID_PARAEQ1,
    ID_PARAEQ2,
    ID_PARAEQ3,
    ID_PARAEQ4,

    /// Originally ID_DISTORT1
    ID_AMP1,
    /// Originally ID_DISTORT2
    ID_AMP2,
    /// Originally ID_DISTORT3
    ID_AMP3,
    /// Originally ID_DISTORT4
    ID_AMP4,
    ID_CAB1,
    ID_CAB2,
    ID_CAB3,
    ID_CAB4,
    ID_REVERB1,
    ID_REVERB2,
    ID_REVERB3,
    ID_REVERB4,
    ID_DELAY1,
    ID_DELAY2,
    ID_DELAY3,
    ID_DELAY4,
    ID_MULTITAP1,
    ID_MULTITAP2,
    ID_MULTITAP3,
    ID_MULTITAP4,
    ID_CHORUS1,
    ID_CHORUS2,
    ID_CHORUS3,
    ID_CHORUS4,
    ID_FLANGER1,
    ID_FLANGER2,
    ID_FLANGER3,
    ID_FLANGER4,
    ID_ROTARY1,
    ID_ROTARY2,
    ID_ROTARY3,
    ID_ROTARY4,
    ID_PHASER1,
    ID_PHASER2,
    ID_PHASER3,
    ID_PHASER4,
    ID_WAH1,
    ID_WAH2,
    ID_WAH3,
    ID_WAH4,
    ID_FORMANT1,
    ID_FORMANT2,
    ID_FORMANT3,
    ID_FORMANT4,
    ID_VOLUME1,
    ID_VOLUME2,
    ID_VOLUME3,
    ID_VOLUME4,
    ID_TREMOLO1,
    ID_TREMOLO2,
    ID_TREMOLO3,
    ID_TREMOLO4,
    ID_PITCH1,
    ID_PITCH2,
    ID_PITCH3,
    ID_PITCH4,
    ID_FILTER1,
    ID_FILTER2,
    ID_FILTER3,
    ID_FILTER4,
    ID_FUZZ1,
    ID_FUZZ2,
    ID_FUZZ3,
    ID_FUZZ4,
    ID_ENHANCER1,
    ID_ENHANCER2,
    ID_ENHANCER3,
    ID_ENHANCER4,
    ID_MIXER1,
    ID_MIXER2,
    ID_MIXER3,
    ID_MIXER4,
    ID_SYNTH1,
    ID_SYNTH2,
    ID_SYNTH3,
    ID_SYNTH4,
    ID_VOCODER1,
    ID_VOCODER2,
    ID_VOCODER3,
    ID_VOCODER4,
    ID_MEGATAP1,
    ID_MEGATAP2,
    ID_MEGATAP3,
    ID_MEGATAP4,
    ID_CROSSOVER1,
    ID_CROSSOVER2,
    ID_CROSSOVER3,
    ID_CROSSOVER4,
    ID_GATE1,
    ID_GATE2,
    ID_GATE3,
    ID_GATE4,
    ID_RINGMOD1,
    ID_RINGMOD2,
    ID_RINGMOD3,
    ID_RINGMOD4,
    ID_MULTICOMP1,
    ID_MULTICOMP2,
    ID_MULTICOMP3,
    ID_MULTICOMP4,
    ID_TENTAP1,
    ID_TENTAP2,
    ID_TENTAP3,
    ID_TENTAP4,
    ID_RESONATOR1,
    ID_RESONATOR2,
    ID_RESONATOR3,
    ID_RESONATOR4,
    ID_LOOPER1,
    ID_LOOPER2,
    ID_LOOPER3,
    ID_LOOPER4,
    ID_TONEMATCH1,
    ID_TONEMATCH2,
    ID_TONEMATCH3,
    ID_TONEMATCH4,
    ID_RTA1,
    ID_RTA2,
    ID_RTA3,
    ID_RTA4,
    ID_PLEX1,
    ID_PLEX2,
    ID_PLEX3,
    ID_PLEX4,
    ID_FBSEND1,
    ID_FBSEND2,
    ID_FBSEND3,
    ID_FBSEND4,
    ID_FBRETURN1,
    ID_FBRETURN2,
    ID_FBRETURN3,
    ID_FBRETURN4,
    ID_MIDIBLOCK,
    ID_MULTIPLEXER1,
    ID_MULTIPLEXER2,
    ID_MULTIPLEXER3,
    ID_MULTIPLEXER4,
    ID_IRPLAYER1,
    ID_IRPLAYER2,
    ID_IRPLAYER3,
    ID_IRPLAYER4,
    ID_FOOTCONTROLLER,
    ID_PRESET_FC,
    ID_EFFECTS_END
}

impl EffectId {
    pub fn get_display_name(&self) -> Option<&'static str> {
        let s = match self {
            EffectId::ID_INPUT1 => "Input 1",
            EffectId::ID_INPUT2 => "Input 2",
            EffectId::ID_INPUT3 => "Input 3",
            EffectId::ID_INPUT4 => "Input 4",
            EffectId::ID_INPUT5 => "Input USB",
            EffectId::ID_OUTPUT1 => "Output 1",
            EffectId::ID_OUTPUT2 => "Output 2",
            EffectId::ID_OUTPUT3 => "Output 3",
            EffectId::ID_OUTPUT4 => "Output 4",
            EffectId::ID_AMP1 => "Amp 1",
            EffectId::ID_AMP2 => "Amp 2",
            EffectId::ID_AMP3 => "Amp 3",
            EffectId::ID_AMP4 => "Amp 4",
            EffectId::ID_CAB1 => "Cab 1",
            EffectId::ID_CAB2 => "Cab 2",
            EffectId::ID_CAB3 => "Cab 3",
            EffectId::ID_CAB4 => "Cab 4",
            EffectId::ID_FUZZ1 => "Drive 1",
            EffectId::ID_FUZZ2 => "Drive 2",
            EffectId::ID_FUZZ3 => "Drive 3",
            EffectId::ID_FUZZ4 => "Drive 4",
            EffectId::ID_CHORUS1 => "Chorus 1",
            EffectId::ID_CHORUS2 => "Chorus 2",
            EffectId::ID_CHORUS3 => "Chorus 3",
            EffectId::ID_CHORUS4 => "Chorus 4",
            EffectId::ID_COMP1 => "Compressor 1",
            EffectId::ID_COMP2 => "Compressor 2",
            EffectId::ID_COMP3 => "Compressor 3",
            EffectId::ID_COMP4 => "Compressor 4",
            EffectId::ID_GRAPHEQ1 => "Graphic EQ 1",
            EffectId::ID_GRAPHEQ2 => "Graphic EQ 2",
            EffectId::ID_GRAPHEQ3 => "Graphic EQ 3",
            EffectId::ID_GRAPHEQ4 => "Graphic EQ 4",
            EffectId::ID_PARAEQ1 => "Parametric EQ 1",
            EffectId::ID_PARAEQ2 => "Parametric EQ 2",
            EffectId::ID_PARAEQ3 => "Parametric EQ 3",
            EffectId::ID_PARAEQ4 => "Parametric EQ 4",
            EffectId::ID_REVERB1 => "Reverb 1",
            EffectId::ID_REVERB2 => "Reverb 2",
            EffectId::ID_REVERB3 => "Reverb 3",
            EffectId::ID_REVERB4 => "Reverb 4",
            EffectId::ID_DELAY1 => "Delay 1",
            EffectId::ID_DELAY2 => "Delay 2",
            EffectId::ID_DELAY3 => "Delay 3",
            EffectId::ID_DELAY4 => "Delay 4",
            EffectId::ID_MULTITAP1 => "Multitap Delay 1",
            EffectId::ID_MULTITAP2 => "Multitap Delay 2",
            EffectId::ID_MULTITAP3 => "Multitap Delay 3",
            EffectId::ID_MULTITAP4 => "Multitap Delay 4",
            EffectId::ID_FLANGER1 => "Flanger 1",
            EffectId::ID_FLANGER2 => "Flanger 2",
            EffectId::ID_FLANGER3 => "Flanger 3",
            EffectId::ID_FLANGER4 => "Flanger 4",
            EffectId::ID_ROTARY1 => "Rotary 1",
            EffectId::ID_ROTARY2 => "Rotary 2",
            EffectId::ID_ROTARY3 => "Rotary 3",
            EffectId::ID_ROTARY4 => "Rotary 4",
            EffectId::ID_PHASER1 => "Phaser 1",
            EffectId::ID_PHASER2 => "Phaser 2",
            EffectId::ID_PHASER3 => "Phaser 3",
            EffectId::ID_PHASER4 => "Phaser 4",
            EffectId::ID_WAH1 => "Wahwah 1",
            EffectId::ID_WAH2 => "Wahwah 2",
            EffectId::ID_WAH3 => "Wahwah 3",
            EffectId::ID_WAH4 => "Wahwah 4",
            EffectId::ID_VOLUME1 => "Volume/Pan 1",
            EffectId::ID_VOLUME2 => "Volume/Pan 2",
            EffectId::ID_VOLUME3 => "Volume/Pan 3",
            EffectId::ID_VOLUME4 => "Volume/Pan 4",
            EffectId::ID_TREMOLO1 => "Tremolo/Panner 1",
            EffectId::ID_TREMOLO2 => "Tremolo/Panner 2",
            EffectId::ID_TREMOLO3 => "Tremolo/Panner 3",
            EffectId::ID_TREMOLO4 => "Tremolo/Panner 4",
            EffectId::ID_PITCH1 => "Pitch 1",
            EffectId::ID_PITCH2 => "Pitch 2",
            EffectId::ID_PITCH3 => "Pitch 3",
            EffectId::ID_PITCH4 => "Pitch 4",
            EffectId::ID_FILTER1 => "Filter 1",
            EffectId::ID_FILTER2 => "Filter 2",
            EffectId::ID_FILTER3 => "Filter 3",
            EffectId::ID_FILTER4 => "Filter 4",
            EffectId::ID_ENHANCER1 => "Enhancer 1",
            EffectId::ID_ENHANCER2 => "Enhancer 2",
            EffectId::ID_ENHANCER3 => "Enhancer 3",
            EffectId::ID_ENHANCER4 => "Enhancer 4",
            EffectId::ID_MIXER1 => "Mixer 1",
            EffectId::ID_MIXER2 => "Mixer 2",
            EffectId::ID_MIXER3 => "Mixer 3",
            EffectId::ID_MIXER4 => "Mixer 4",
            EffectId::ID_SYNTH1 => "Synth 1",
            EffectId::ID_SYNTH2 => "Synth 2",
            EffectId::ID_SYNTH3 => "Synth 3",
            EffectId::ID_SYNTH4 => "Synth 4",
            EffectId::ID_VOCODER1 => "Vocoder 1",
            EffectId::ID_VOCODER2 => "Vocoder 2",
            EffectId::ID_VOCODER3 => "Vocoder 3",
            EffectId::ID_VOCODER4 => "Vocoder 4",
        


            _ => { return None; }
        };
        Some(s)
    }
}

#[test]
fn test_effect_ids() {
    use packed_struct::*;

    assert_eq!(EffectId::ID_IRCAPTURE, EffectId::from_primitive(36).unwrap());
    assert_eq!(EffectId::ID_PRESET_FC, EffectId::from_primitive(200).unwrap());
}